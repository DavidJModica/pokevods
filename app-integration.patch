--- a/src/App.js
+++ b/src/App.js
@@ -1,6 +1,7 @@
 import { useState, useEffect } from 'react';
 import './App.css';
 import HostedGuidesAdmin from './components/HostedGuidesAdmin';
+import GuideEditorStandalone from './components/GuideEditorStandalone';

 // Format date for Mega Evolutions format (Sept 26, 2025)
 const MEGA_EVOLUTIONS_FORMAT_DATE = new Date('2025-09-26');
@@ -81,6 +82,8 @@ function App() {
   const [currentView, setCurrentView] = useState('home'); // 'home', 'deck', 'admin', 'author', 'guides', 'guide-view', 'guide-edit'
   const [selectedGuideSlug, setSelectedGuideSlug] = useState(null);
   const [selectedGuideId, setSelectedGuideId] = useState(null);
+  const [showGuideEditor, setShowGuideEditor] = useState(false);
+  const [editingGuideId, setEditingGuideId] = useState(null);
   const [importResults, setImportResults] = useState(null);
   const [adminTab, setAdminTab] = useState('bulkImport'); // 'bulkImport', 'reviewQueue', 'matchupQueue', 'manageGuides', 'manageAuthors', 'hostedGuides'
   const [editingDeck, setEditingDeck] = useState(null);
@@ -4005,7 +4008,34 @@ function App() {

           {/* Hosted Guides Tab */}
           {adminTab === 'hostedGuides' && (
-            <HostedGuidesAdmin decks={decks} />
+            <>
+              {!showGuideEditor && (
+                <HostedGuidesAdmin
+                  decks={decks}
+                  onCreateGuide={() => {
+                    setEditingGuideId(null);
+                    setShowGuideEditor(true);
+                  }}
+                  onEditGuide={(guideId) => {
+                    setEditingGuideId(guideId);
+                    setShowGuideEditor(true);
+                  }}
+                  onViewGuide={(slug) => {
+                    alert(`View guide: ${slug}\n\nPublic guide viewer coming soon!`);
+                  }}
+                />
+              )}
+
+              {showGuideEditor && (
+                <GuideEditorStandalone
+                  guideId={editingGuideId}
+                  decks={decks}
+                  onCancel={() => {
+                    setShowGuideEditor(false);
+                    setEditingGuideId(null);
+                  }}
+                  onSaveSuccess={(guide) => {
+                    alert(`Guide "${guide.title}" saved successfully!`);
+                    setShowGuideEditor(false);
+                    setEditingGuideId(null);
+                  }}
+                />
+              )}
+            </>
           )}

         </div>
